name: Backend Test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Setup configuration
      env:
        ORG_CODE: ${{ secrets.SSO_ORG_CODE }}
        USERNAME: ${{ secrets.SSO_USERNAME }}
        PASSWORD: ${{ secrets.SSO_PASSWORD }}
      run: |
        sed 's/[<>]//g' instance/config.template.cfg > instance/config.cfg
        echo {\"${ORG_CODE}\": {\"username\": \"${USERNAME}\", \"password\": \"${PASSWORD}\"}} > scraper/credentials.json
    # - name: Quick test with pytest and measure code coverage
    #   run: |
    #     coverage run --include="app/*,instance/*,models/*,scraper/*,uploader/*" -m pytest --ignore="app/tests/test_auth.py"
    # - name: Slow Test with pytest (SSO UI related)
    #   run: |
    #     coverage run --include="sso/*" --append -m pytest -rs
    - name: Run all tests with pytest and measure code coverage
      run: |
        coverage run --include="app/*,instance/*,models/*,scraper/*,sso/*,uploader/*" -m pytest
        coverage xml -i
    - name: Cleanup configuration
      run: |
        rm instance/config.cfg
        rm scraper/credentials.json

  sonarqube:
      runs-on: ubuntu-latest
      steps:
      - name: Setup sonar scanner
        uses: warchant/setup-sonar-scanner@v1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      - name: 'Send data to SonarQube'
        env:
          # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        run: |
          sonar-scanner
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}
            -Dsonar.projectKey=${{ secrets.SONARQUBE_PROJECT_KEY }}
            -Dsonar.branch.name=${{ github.REF }}
            -Dsonar.scm.provider=git